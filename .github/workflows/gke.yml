# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build with gradle and deploy to GKE cluster

on:
  push:
    branches: [master]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ucampus-cluster
  GKE_ZONE: us-east1-b
  IMAGE: web-server

jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for buildJARs script
        run: chmod +x ./buildJARs.sh
      - name: Grant execute permission for libs gradlew
        run: chmod +x ./uCampusLibs/domainObjects/gradlew && chmod +x ./uCampusLibs/dtoObjects/gradlew
      - name: Build libs with buildJARs script
        run: ./buildJARs.sh
      - name: Grant execute permission for gradlew
        run: chmod +x ./AppServer/gradlew && chmod +x ./WebServer/gradlew
      - name: Build AppServer with Gradle
        run: ./AppServer/gradlew build
      - name: Build WebServer with Gradle
        run: ./WebServer/gradlew build
      - run: echo $(ls)
      - run: echo $(ls AppServer)
      - run: echo $(ls WebServer)
      - run: echo $(ls AppServer/build)
      - run: echo $(ls WebServer/build)
      - run: echo $(ls AppServer/build/lib)
      - run: echo $(ls WebServer/build/lib)      
      - name: Upload AppServer .jar as artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-snapshot
          path: ./AppServer/build/libs
      - name: Upload WebServer .jar as artifact
        uses: actions/upload-artifact@v1
        with:
          name: web-snapshot
          path: ./WebServer/build/libs

  # deploy:
  #   needs: build
  #   name: Deploy app to GKE
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: app-snapshot

  #     - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         version: "286.0.0"
  #         service_account_email: ${{ secrets.GKE_SA_EMAIL }}
  #         service_account_key: ${{ secrets.GKE_SA_KEY }}
  #         project_id: ${{ secrets.GKE_PROJECT }}

  #     - run: |-
  #         gcloud --quiet auth configure-docker

  #     - run: |-
  #         gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

  #     - name: Build
  #       run: |-
  #         docker build \
  #           --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
  #           .

  #     - name: Publish
  #       run: |-
  #         docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

  #     - name: Set up Kustomize
  #       run: |-
  #         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
  #         chmod u+x ./kustomize

  #     - name: Deploy
  #       run: |-
  #         ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
  #         ./kustomize build . | kubectl apply -f -
  #         kubectl rollout status deployment/web-server
