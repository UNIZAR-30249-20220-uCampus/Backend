plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.sonarqube" version "2.8"
	// Generate code coverage report
	id 'jacoco'
}

group = 'es.ucampus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sonarqube {
    properties {
        property 'sonar.projectName', 'Example of SonarQube Scanner for Gradle Usage'
    }
}

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.11'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.5.RELEASE'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.11'
	compile('com.rabbitmq:amqp-client:3.4.1')
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

	// https://mvnrepository.com/artifact/net.postgis/postgis-jdbc
	compile group: 'net.postgis', name: 'postgis-jdbc', version: '2.5.0'

	// https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial
	compile group: 'org.hibernate', name: 'hibernate-spatial', version: '5.1.0.Final'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.3.0-rc1'
	// https://mvnrepository.com/artifact/com.bedatadriven/jackson-datatype-jts
	compile group: 'com.bedatadriven', name: 'jackson-datatype-jts', version: '2.4'

	compile files('libs/domainObjects.jar')
	compile files('libs/dtoObjects.jar')
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	// Forcing the execution of 'test' before the execution of 'jacocoTestReport'
	dependsOn test
}